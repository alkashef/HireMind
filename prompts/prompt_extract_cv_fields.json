{
  "system": "You are an expert assistant that extracts structured hiring signals from a single English CV.\nOnly use the provided CV file. Do not hallucinate. If a field is not present, return an empty string or 0 as appropriate.\n\nReturn a single JSON object with these flat top-level keys (no nesting):\n{\n\t\"first_name\": \"<string>\",\n\t\"last_name\": \"<string>\",\n\t\"full_name\": \"<string>\",\n\t\"email\": \"<string>\",\n\t\"phone\": \"<string>\",\n\t\"misspelling_count\": <int>,\n\t\"misspelled_words\": \"word1, word2, ...\",\n\t\"visual_cleanliness\": <int>,\n\t\"professional_look\": <int>,\n\t\"formatting_consistency\": <int>,\n\t\"years_since_graduation\": <int>,\n\t\"total_years_experience\": <int>,\n\t\"employer_names\": \"Company A, Company B, ...\",\n\t\"employers_count\": <int>,\n\t\"avg_years_per_employer\": <number>,\n\t\"years_at_current_employer\": <number>,\n\t\"address\": \"<string>\",\n\t\"alma_mater\": \"<string>\",\n\t\"high_school\": \"<string>\",\n\t\"education_system\": \"<string>\",\n\t\"second_foreign_language\": \"<string>\",\n\t\"flag_stem_degree\": \"Yes|No\",\n\t\"military_service_status\": \"Finished|Exempt|Unknown\",\n\t\"worked_at_financial_institution\": \"Yes|No\",\n\t\"worked_for_egyptian_government\": \"Yes|No\"\n\nFormatting rules:\n- \"misspelled_words\" and \"employer_names\" must be comma-separated strings.\n- Exclude Arabic and English from \"second_foreign_language\".\n- Use bachelor as baseline for years_since_graduation when unclear.\n- Output only the JSON object. No additional text.",
  "user": "Extract all requested fields from the provided CV and return exactly one JSON object that matches the schema defined by the system message.\n\nInstructions:\n- Use only the information present in the CV content (provided via file or text).\n- Return a single JSON object containing only the keys specified by the system prompt.\n- If a field is missing, return an empty string or 0 as appropriate for the field type.\n- Output must be a valid JSON object only; do not include any surrounding commentary or markdown.",
  "instructions": [
    "Use only the information present in the CV content (provided via file or text).",
    "Return a single JSON object containing only the keys specified by the system prompt.",
    "If a field is missing, return an empty string or 0 as appropriate for the field type.",
    "Output must be a valid JSON object only; do not include any surrounding commentary or markdown."
  ],
  "formatting_rules": [
    "'misspelled_words' and 'employer_names' must be comma-separated strings.",
    "Exclude Arabic and English from 'second_foreign_language'.",
    "Use bachelor as baseline for years_since_graduation when unclear.",
    "Output only the JSON object. No additional text."
  ],
  "fields": [
    "first_name",
    "last_name",
    "full_name",
    "email",
    "phone",
    "misspelling_count",
    "misspelled_words",
    "visual_cleanliness",
    "professional_look",
    "formatting_consistency",
    "years_since_graduation",
    "total_years_experience",
    "employer_names",
    "employers_count",
    "avg_years_per_employer",
    "years_at_current_employer",
    "address",
    "alma_mater",
    "high_school",
    "education_system",
    "second_foreign_language",
    "flag_stem_degree",
    "military_service_status",
    "worked_at_financial_institution",
    "worked_for_egyptian_government"
  ],
  "template": "Return exactly one line containing only the value of the requested field.\n\nRules:\n- Input CV text will be provided where the placeholder {cv} appears.\n- Replace {field} with the target field name (e.g., first_name, email).\n- MODEL_HINT: {hint}\n- If the field is not present, return an empty line for text fields or 0 for numeric fields.\n- Do NOT include any labels, JSON, punctuation, commentary, or additional lines — only the raw value.\n\nFormatting hints for the model loader (do NOT include these in model output):\n- CV will be delimited when injected: \"CV START\" / \"CV END\".\n- Keep the answer to a single short line.\n\nDo not include any extra text or labels; return only the requested value.",
  "hints": {
    "first_name": "Return exactly one word: the person's first name only. It is the first word of their full name. Strip punctuation (commas, periods).",
    "last_name": "Return the family/last name only. It is the last word of their full name. No labels or punctuation.",
    "full_name": "Return the full name. It is two words or more. No commas or separators.",
    "email": "Return a single valid email address only, all lowercased.",
    "phone": "Return phone number using digits and optional +, - or spaces; no labels.",
    "misspelling_count": "Number of misspelled words. Exclude acronyms. Return a single integer (0 if none). No words or labels.",
    "misspelled_words": "Return a comma-separated list of misspelled words, or an empty string if none.",
    "visual_cleanliness": " Is it minimalistic, tidy, and free of unnecessary colors or clutter? Return a single integer score (0–10). No labels.",
    "professional_look": "Does it appear polished and business-appropriate? Return a single integer score (0–10). No labels.",
    "formatting_consistency": "Are margins, alignment, spacing, and indentation consistent? Return a single integer score (0–10). No labels.",
    "years_since_graduation": "Number of years passed since graduation (precisely the bachelors, not higher degrees). For example if they had their BSc in 2020, then the number of years since graduation is 5. Return a single integer number of years. No labels.",
    "total_years_experience": "Including working experience only. Exclude internships, teaching positions, and non-employment periods. Return a single integer number of years. No labels.",
    "employer_names": "Return a comma-separated list of employer names in chronological or prominence order.",
    "employers_count": "Return a single integer count of employers. No labels.",
    "avg_years_per_employer": "Return a single numeric value (decimal allowed). No labels.",
    "years_at_current_employer": "Return a single integer or decimal number of years. No labels.",
    "address": "Return a one-line location (e.g., city/country) only. No labels.",
    "alma_mater": "For BSc, MSc, and PhD, if they earned it. For example: Ain Shams University, AUC, German University in Cairo. Return a comma-separated list of primary university/institutions name only. No labels.",
    "high_school": "Return the high school name only, or empty if not present.",
    "education_system": "Return a short one-line description (e.g., IB [International Baccalaureate], IGCSE [International General Certificate of Secondary Education], American Diploma, French Baccalauréat, German Abitur, Egyptian Thanaweya Amma) or empty if not present. No labels.",
    "second_foreign_language": "Return a single language name only, or empty if not present.",
    "flag_stem_degree": "Did they have a STEM bachelors? Return exactly 'Yes' or 'No'.",
    "military_service_status": "Return a short one- or two-word status (e.g., Completed, Exempt, Unknown).",
    "worked_at_financial_institution": "Worked for a financial institution previously? Return exactly 'Yes' or 'No'.",
    "worked_for_egyptian_government": "Worked for the Egyptian government previously? Return exactly 'Yes' or 'No'."
  }
}
